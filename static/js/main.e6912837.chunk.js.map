{"version":3,"sources":["components/Header/Header.js","components/Image.js","components/ImagePanel.js","App.js","index.js"],"names":["NavButton","props","state","isHidden","type","className","this","value","Component","Header","ImageDescription","description","Image","img","src","url","alt","ImagePanel","getImages","a","fetch","res","json","imageCount","images","length","id","image","newImagesState","setState","console","log","message","i","imageSet","map","App","ReactDOM","render","document","getElementById"],"mappings":"oOAGMA,G,wDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHC,E,qDAQf,OADW,wBAAQC,KAAK,SAASC,UAAU,eAAhC,SAAgDC,KAAKL,MAAMM,Y,GARtDC,cAkCTC,E,uKAJP,OAdI,sBAAKJ,UAAU,aAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,oBAAIA,UAAU,kBAAd,qBAEJ,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,+BAAf,UACI,cAAC,EAAD,CAAWE,MAAM,WACjB,cAAC,EAAD,CAAWA,MAAM,YACjB,cAAC,EAAD,CAAWA,MAAM,wB,GAXpBC,a,+BCdfE,E,uKAGE,OADe,qBAAKL,UAAU,mBAAf,SAAmCC,KAAKL,MAAMU,kB,GAFtCH,aAkBhBI,E,uKAVP,IAAMC,EAAM,qBAAKC,IAAKR,KAAKL,MAAMc,IAAKC,IAAKV,KAAKL,MAAMc,MACtD,OACI,sBAAKV,UAAU,iBAAf,UACI,qBAAKA,UAAU,QAAf,SAAwBQ,IACxB,cAAC,EAAD,CAAkBF,YAAY,6B,GAN1BH,aC4CLS,E,kDA7CX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IAOViB,UARmB,sBAQP,oCAAAC,EAAA,+EAEcC,MAdlB,yCAYI,cAEEC,EAFF,gBAGeA,EAAIC,OAHnB,OAGEA,EAHF,OAIEC,EAAa,EAAKrB,MAAMsB,OAAOC,OAC/BZ,EAAM,CACRa,GAAIH,EAAa,EACjBR,IAAKO,EAAKK,OAERC,EATF,sBASuB,EAAK1B,MAAMsB,QATlC,CAS0CX,IAC9C,EAAKgB,SAAS,CAAEL,OAAQI,IAVpB,kDAYJE,QAAQC,IAAI,KAAIC,SAZZ,0DANR,EAAK9B,MAAQ,CACTsB,OAAQ,IAHG,E,gEAyBfM,QAAQC,IAAI,6BACZ,IAAK,IAAIE,EAAI,EAAGA,EA7BC,GA6BqBA,IAClC3B,KAAKY,c,+BAIH,IACEM,EAAWlB,KAAKJ,MAAhBsB,OACR,GAAIlB,KAAKJ,MAAMsB,OAAOC,OAAQ,CAC1B,IAAMS,EAAWV,EAAOW,KAAI,SAACR,GAAD,OAAW,cAAC,EAAD,CAAsBZ,IAAKY,EAAMZ,KAArBY,EAAMD,OACzD,OAAO,qBAAKrB,UAAU,aAAf,SAA6B6B,IAGxC,OACI,qBAAK7B,UAAU,aAAf,SACI,qBAAKA,UAAU,qC,GAzCNG,aCSV4B,G,6KARP,OACI,sBAAK/B,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GALEG,cCDlB6B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e6912837.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport \"../../css/Header.css\";\n\nclass NavButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isHidden: false,\n        };\n    }\n    render() {\n    const output = <button type=\"button\" className=\"btn btn-dark\">{this.props.value}</button>\n        return output;\n    }\n}\n\nclass Header extends Component {\n    render() {\n        const output = (\n            <div className=\"row Header\">\n                <div className=\"col-7 text-center align-middle \">\n                    <h1 className=\"display-4 Logo \">IMGUR</h1>\n                </div>\n                <div className=\"col-5 text-center\">\n                    <div className=\"btn-group btn-group-lg h-100\">\n                        <NavButton value=\"Upload\"/>\n                        <NavButton value=\"Sign In\"/>\n                        <NavButton value=\"Sign Up\"/>\n                    </div>\n                </div>\n            </div>\n        );\n\n        return output;\n    }\n}\n\nexport default Header;\n","import { Component } from \"react\";\n\nclass ImageDescription extends Component {\n    render() {\n        const output = <div className=\"ImageDescription\">{this.props.description}</div>;\n        return output;\n    }\n}\nclass Image extends Component {\n    render() {\n        const img = <img src={this.props.url} alt={this.props.url}></img>;\n        return (\n            <div className=\"ImageComponent\">\n                <div className=\"Image\">{img}</div>\n                <ImageDescription description=\"photo description\" />\n            </div>\n        );\n    }\n}\n\nexport default Image;\n","import { Component } from \"react\";\nimport Image from \"./Image\";\n\nconst URI = \"https://foodish-api.herokuapp.com/api\";\nconst NUMBER_OF_IMAGES = 20;\n\nclass ImagePanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            images: [],\n        };\n    }\n\n    // function to get one image from the external API\n    getImages = async () => {\n        try {\n            const res = await fetch(URI);\n            const json = await res.json();\n            const imageCount = this.state.images.length;\n            const img = {\n                id: imageCount + 1,\n                url: json.image,\n            };\n            const newImagesState = [...this.state.images, img];\n            this.setState({ images: newImagesState });\n        } catch (err) {\n            console.log(err.message);\n        }\n    };\n\n    componentDidMount() {\n        console.log(\"Rendering Image Panel Now\");\n        for (let i = 0; i < NUMBER_OF_IMAGES; i++) {\n            this.getImages();\n        }\n    }\n\n    render() {\n        const { images } = this.state;\n        if (this.state.images.length) {\n            const imageSet = images.map((image) => <Image key={image.id} url={image.url} />);\n            return <div className=\"ImagePanel\">{imageSet}</div>;\n        }\n\n        return (\n            <div className=\"ImagePanel\">\n                <div className=\"spinner-border text-danger\"></div>\n            </div>\n        );\n    }\n}\nexport default ImagePanel;\n","import { Component } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport ImagePanel from \"./components/ImagePanel\";\nimport \"./css/App.css\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header/>\n                <ImagePanel />\n            </div>\n        );\n    }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}